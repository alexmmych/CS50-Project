name: Test & Build
on:
  pull_request:
  workflow_run:
    workflows: ["test"]
    types:
      - completed

jobs:
  build:
    if: github.event_name == 'workflow_run' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - { name: Android, os: ubuntu-latest }
          - { name: iOS, os: macos-latest }
          - { name: Web, os: ubuntu-latest }
          - { name: Linux, os: ubuntu-latest }
          - { name: macOS, os: macos-latest }
          - { name: Windows, os: windows-latest }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java for Android and iOS
        if: matrix.platform.name == 'Android' || matrix.platform.name == 'iOS'
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64

      - name: Install dependencies for Linux
        if: matrix.platform.name == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            pkg-config \
            clang \
            ninja-build \
            libgtk-3-dev \
            libblkid-dev \
            liblzma-dev \
            liblz4-dev \
            libssl-dev \
            libprotobuf-dev \
            protobuf-compiler

      - name: Flutter pub get
        run: flutter pub get

      - name: Build ${matrix.platform.name}
        run: |
          if [ "${matrix.platform.name}" == "macOS" ]; then
            flutter build macos --release
            cd build/macos/Build/Products/Release
            zip -r macos-app.zip .
          elif [ "${matrix.platform.name}" == "Windows" ]; then
            flutter build windows --release
          else
            flutter build ${matrix.platform.name.toLowerCase()}
          fi

      - name: Upload Android Artifacts
        if: matrix.platform.name == 'Android'
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/*.apk

      - name: Zip iOS Artifacts
        if: matrix.platform.name == 'iOS'
        run: |
          mkdir -p ios-artifacts/Payload
          cp -R build/ios/iphoneos/Runner.app ios-artifacts/Payload/
          cd ios-artifacts
          zip -r app.ipa Payload

      - name: Upload iOS Artifacts
        uses: actions/upload-artifact@v3
        if: matrix.platform.name == 'iOS'
        with:
          name: ios-ipa
          path: ios-artifacts/app.ipa

      - name: Upload Web Artifacts
        if: matrix.platform.name == 'Web'
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web

      - name: Upload Linux Artifacts
        if: matrix.platform.name == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: build/linux/x64/release/bundle

      - name: Zip macOS Artifacts
        if: matrix.platform.name == 'macOS'
        run: |
          cd build/macos/Build/Products/Release
          zip -r macos-app.zip .

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v3
        if: matrix.platform.name == 'macOS'
        with:
          name: macos-build
          path: build/macos/Build/Products/Release/macos-app.zip

      - name: Upload Windows Artifacts
        if: matrix.platform.name == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: build/windows/x64/runner/Release

  check:
    if: ${{ always() }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
      - name: Complete status reporting
        run: echo "Build checks completed"

      # - name: Delete build artifacts
      #   uses: geekyeggo/delete-artifact@v5
      #   with:
      #     name: "**-build"