name: Test & Build

on:
  pull_request:
    branches: [main]
    paths: [lib/**, test/**, .github/workflows/**]
    
# on: push    # Default will running for every branch.
    
jobs:
  build:
    if: github.event_name == 'workflow_run' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [android, ios, web, linux, macos, windows]
        include:
          - platform: android
            os: ubuntu-latest
          - platform: ios
            os: macos-latest
          - platform: web
            os: ubuntu-latest
          - platform: linux
            os: ubuntu-latest
          - platform: macos
            os: macos-latest
          - platform: windows
            os: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java for Android and iOS
        if: matrix.platform == 'android' || matrix.platform == 'ios'
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64

      - name: Install dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            pkg-config \
            clang \
            ninja-build \
            libgtk-3-dev \
            libblkid-dev \
            liblzma-dev \
            liblz4-dev \
            libssl-dev \
            libprotobuf-dev \
            protobuf-compiler

      - name: Get Flutter packages
        run: flutter pub get

      - name: Test
        run: |
          flutter analyze .
          flutter test

      - name: Build APK for Android
        if: matrix.platform == 'android'
        run: flutter build apk --release --split-per-abi

      - name: Build IPA for iOS
        if: matrix.platform == 'ios'
        run: flutter build ios --no-codesign

      - name: Build Web
        if: matrix.platform == 'web'
        run: flutter build web

      - name: Build Linux
        if: matrix.platform == 'linux'
        run: flutter build linux

      - name: Build macOS
        if: matrix.platform == 'macos'
        run: flutter build macos

      - name: Build Windows
        if: matrix.platform == 'windows'
        run: flutter build windows

      - name: Upload Android APK
        if: matrix.platform == 'android'
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/*.apk

      - name: Upload iOS IPA
        if: matrix.platform == 'ios'
        uses: actions/upload-artifact@v3
        with:
          name: ios-ipa
          path: build/ios/iphoneos/app.ipa

      - name: Upload Web build
        if: matrix.platform == 'web'
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web

      - name: Upload Linux build
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: build/linux/x64/release/bundle

      - name: Upload macOS build
        if: matrix.platform == 'macos'
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: build/macos/Build/Products/Release

      - name: Upload Windows build
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: build/windows/x64/runner/Release

  check:
    if: ${{ always() }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
      - name: Complete status reporting
        run: echo "Build checks completed"

      # - name: Delete build artifacts
      #   uses: geekyeggo/delete-artifact@v5
      #   with:
      #     name: "**-build"