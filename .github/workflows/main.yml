name: Build & Release

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.artifact-path.outputs.path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64
      - name: Install dependencies
        run: flutter pub get
      - name: Save artifact path
        id: artifact-path
        run: echo "::set-output name=path::${{ github.workspace }}"
      - name: Upload common files
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: ${{ github.workspace }}

  build:
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: android
          - os: macos-latest
            platform: ios
          - os: ubuntu-latest
            platform: web
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
          - os: windows-latest
            platform: windows
    steps:
      - name: Download common files
        uses: actions/download-artifact@v3
        with:
          name: workspace
          path: ${{ github.workspace }}
      - name: Install dependencies (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            pkg-config \
            clang \
            ninja-build \
            libgtk-3-dev \
            libblkid-dev \
            liblzma-dev \
            liblz4-dev \
            libssl-dev \
            libprotobuf-dev \
            protobuf-compiler
      - name: Build ${{ matrix.platform }}
        run: |
          flutter pub get
          if [ "${{ matrix.platform }}" == "android" ]; then
            flutter build apk --release --split-per-abi
          elif [ "${{ matrix.platform }}" == "ios" ]; then
            flutter build ios --no-codesign
            cd build/ios/iphoneos
            mkdir Payload
            cd Payload
            ln -s ../Runner.app
            cd ..
            zip -r app.ipa Payload
          elif [ "${{ matrix.platform }}" == "web" ]; then
            flutter build web
          elif [ "${{ matrix.platform }}" == "linux" ]; then
            flutter build linux
          elif [ "${{ matrix.platform }}" == "macos" ]; then
            flutter build macos
          elif [ "${{ matrix.platform }}" == "windows" ]; then
            flutter build windows
          fi
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.platform }}
          path: |
            build/app/outputs/apk/release/*.apk
            build/ios/iphoneos/app.ipa
            build/web
            build/linux
            build/macos
            build/windows

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-*
          path: release/
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: release/*
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.GITHUB_TOKEN }}